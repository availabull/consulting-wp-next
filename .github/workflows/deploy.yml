# .github/workflows/deploy.yml
name: Deploy stack

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1 Checkout repo
    - uses: actions/checkout@v4

    # 2 Authenticate to GitHub Container Registry
    - name: Log in to GHCR
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    # 3 Build + push WordPress image
    - name: Build & push WordPress image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/wp:${{ github.sha }} wordpress
        docker push     ghcr.io/${{ github.repository }}/wp:${{ github.sha }}

    # 4 Build + push Next.js image
    - name: Build & push Next.js image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/next:${{ github.sha }} nextjs-site
        docker push     ghcr.io/${{ github.repository }}/next:${{ github.sha }}

    # 5 SSH into droplet and run/refresh the stack
    - name: Deploy on droplet
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.DO_HOST }}
        username: root
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          set -e
          mkdir -p /srv/consultancy
          cd /srv/consultancy

          cat > docker-compose.yml <<'EOF'
          version: "3.9"
          services:
            db:
              image: mariadb:11
              restart: unless-stopped
              environment:
                MYSQL_ROOT_PASSWORD: secret
                MYSQL_DATABASE: wp
              volumes:
                - db:/var/lib/mysql

            wordpress:
              image: ghcr.io/${{ github.repository }}/wp:${{ github.sha }}
              restart: unless-stopped
              environment:
                DB_NAME: wp
                DB_USER: root
                DB_PASSWORD: secret
                DB_HOST: db
              ports:
                - "8080:80"               # optional: hit Apache directly for debugging
              volumes:
                - uploads:/var/www/html/web/app/uploads
              depends_on:
                - db

            next:
              image: ghcr.io/${{ github.repository }}/next:${{ github.sha }}
              restart: unless-stopped
              environment:
                NEXT_PUBLIC_WPGRAPHQL_URL: http://wordpress/graphql
              ports:
                - "80:3000"               # expose Next.js on port 80
              depends_on:
                - wordpress

          volumes:
            db:
            uploads:
          EOF

          docker compose pull
          docker compose up -d --remove-orphans
