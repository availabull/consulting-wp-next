# docker‑compose.yml — production stack, Traefik + automatic HTTPS
services:
  db:
    image: mariadb:11
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: wp
    volumes:
      - db_data:/var/lib/mysql

  wordpress:
    build: ./wordpress            # for local dev; GH Actions builds again
    expose: ["80"]
    environment:
      DB_NAME: wp
      DB_USER: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      DB_HOST: db
      WP_ENV:  ${WP_ENV:-production}
      WP_HOME: https://wp.robertfisher.com
      WP_SITEURL: https://wp.robertfisher.com/wp
    volumes:
      - uploads:/var/www/html/web/app/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.wp.rule=Host(`wp.robertfisher.com`)
      - traefik.http.routers.wp.entrypoints=websecure
      - traefik.http.routers.wp.tls.certresolver=cf
      - traefik.http.services.wp.loadbalancer.server.port=80
    depends_on: [db]

  next:
    build:
      context: ./nextjs-site
      args:
        NEXT_PUBLIC_WPGRAPHQL_URL: http://placeholder/graphql
    expose: ["3000"]
    environment:
      NEXT_PUBLIC_WPGRAPHQL_URL: http://wordpress/graphql
    labels:
      - traefik.enable=true
      - traefik.http.routers.next.rule=Host(`robertfisher.com`) || Host(`www.robertfisher.com`)
      - traefik.http.routers.next.entrypoints=websecure
      - traefik.http.routers.next.tls.certresolver=cf
      - traefik.http.services.next.loadbalancer.server.port=3000
    depends_on: [wordpress]

  traefik:
    image: traefik:3
    command:
      - "--log.level=INFO"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.cf.acme.dnschallenge=true"
      - "--certificatesresolvers.cf.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cf.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.cf.acme.storage=/letsencrypt/acme.json"
    environment:
      CLOUDFLARE_DNS_API_TOKEN: ${CLOUDFLARE_DNS_API_TOKEN}
      LE_EMAIL: ${LE_EMAIL}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - le:/letsencrypt

volumes:
  db_data:
  uploads:
  le:
